{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jassem\\\\Desktop\\\\Portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\Portfolio\\\\src\\\\components\\\\container\\\\projects\\\\Projects.js\";\nimport React, { useState } from \"react\";\nimport \"./Projects.scss\";\nimport { projectData, projectListData } from \"./projectData\";\nimport ProjectsContent from \"./ProjectsContent\";\n\nfunction Projects() {\n  const _useState = useState(projectData),\n        _useState2 = _slicedToArray(_useState, 2),\n        projects = _useState2[0],\n        setProjects = _useState2[1];\n\n  const _useState3 = useState(projectListData),\n        _useState4 = _slicedToArray(_useState3, 2),\n        projectList = _useState4[0],\n        setProjectList = _useState4[1];\n\n  React.useEffect(() => {\n    setActiveList(\"All\");\n  }, []);\n  const data = projects && projects.map(item => {\n    return React.createElement(ProjectsContent, {\n      key: item.altName,\n      projectImg: item.projectImg,\n      altName: item.altName,\n      preview: item.preview,\n      github: item.github,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  });\n\n  const setActiveList = name => {\n    const newState = projectList.map(item => {\n      if (item.listName === name) item.listActive = true;else item.listActive = false;\n      return item;\n    });\n    setProjectList(newState);\n  };\n\n  const listProject = p => {\n    if (p.listName === \"All\") {\n      setProjects(projectData);\n      setActiveList(p.listName);\n      return;\n    }\n\n    const newState = projectData.filter(data => data.lang === p.listName);\n    setProjects(newState);\n    setActiveList(p.listName);\n  };\n\n  const projectLists = projectList.map((p, i) => {\n    return React.createElement(\"p\", {\n      key: i,\n      className: p.listActive ? \"projects-list-link active-list\" : \"projects-list-link\",\n      onClick: () => listProject(p),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, p.listName);\n  });\n  return React.createElement(\"div\", {\n    id: \"projects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"header-content-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Projects\")), React.createElement(\"div\", {\n    className: \"projects-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, projectLists), React.createElement(\"div\", {\n    className: \"projects-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, data));\n}\n\nexport default Projects;","map":{"version":3,"sources":["C:/Users/jassem/Desktop/Portfolio/src/components/container/projects/Projects.js"],"names":["React","useState","projectData","projectListData","ProjectsContent","Projects","projects","setProjects","projectList","setProjectList","useEffect","setActiveList","data","map","item","altName","projectImg","preview","github","name","newState","listName","listActive","listProject","p","filter","lang","projectLists","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Projects.scss\";\nimport { projectData, projectListData } from \"./projectData\";\nimport ProjectsContent from \"./ProjectsContent\";\n\nfunction Projects() {\n  const [projects, setProjects] = useState(projectData);\n  const [projectList, setProjectList] = useState(projectListData);\n\n  React.useEffect(() => {\n    setActiveList(\"All\");\n  }, []);\n\n  const data =\n    projects &&\n    projects.map((item) => {\n      return (\n        <ProjectsContent\n          key={item.altName}\n          projectImg={item.projectImg}\n          altName={item.altName}\n          preview={item.preview}\n          github={item.github}\n        ></ProjectsContent>\n      );\n    });\n\n  const setActiveList = (name) => {\n    const newState = projectList.map((item) => {\n      if (item.listName === name) item.listActive = true;\n      else item.listActive = false;\n      return item;\n    });\n    setProjectList(newState);\n  };\n\n  const listProject = (p) => {\n    if (p.listName === \"All\") {\n      setProjects(projectData);\n      setActiveList(p.listName);\n      return;\n    }\n    const newState = projectData.filter((data) => data.lang === p.listName);\n    setProjects(newState);\n    setActiveList(p.listName);\n  };\n\n  const projectLists = projectList.map((p, i) => {\n    return (\n      <p\n        key={i}\n        className={\n          p.listActive ? \"projects-list-link active-list\" : \"projects-list-link\"\n        }\n        onClick={() => listProject(p)}\n      >\n        {p.listName}\n      </p>\n    );\n  });\n\n  return (\n    <div id=\"projects\">\n      <div className=\"header-content\">\n        <h2 className=\"header-content-title\">Projects</h2>\n      </div>\n      <div className=\"projects-list\">{projectLists}</div>\n      <div className=\"projects-content\">{data}</div>\n    </div>\n  );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}